I"´(function() {
  RecordManagerApp.Views.RecordManagerAppView = Backbone.View.extend({
    template: JST["backbone/templates/record_manager_app_main"],
    initialize: function() {
      _.bindAll(this, 'fetchRecords');
      this.record_collection = new RecordManagerApp.Collections.RecordCollection();
      this.data_table_initialized = false;
      return this.listenTo(this.record_collection, 'add', this.addOne);
    },
    events: {
      'click #add-new-record': 'addNewRecord',
      'click #create-new-record': 'createNewRecord'
    },
    render: function() {
      this.$el.html(this.template());
      this.fetchRecords();
      return this;
    },
    fetchRecords: function() {
      return this.record_collection.fetch({
        data: {
          limit: this.limit,
          offset: this.offset
        }
      });
    },
    addNewRecord: function() {
      this.$('#record-success-alert').hide();
      return this.$('#add-new-record-modal').modal('show');
    },
    addOne: function(record) {
      var view;
      if (!this.data_table_initialized) {
        $("#records-list").dataTable({
          paging: false,
          scrollY: 400,
          ajax: this.$('#records-list').data('source')
        });
        this.data_table_initialized = true;
      }
      this.$('#new-record-form')[0].reset();
      this.$('#record-success-alert').show();
      view = new RecordManagerApp.Views.RecordItemView({
        model: record
      });
      return this.$("#records-table-body").append(view.render().el);
    },
    createNewRecord: function() {
      var artist, condition, title, year;
      title = this.$('#album-title').val();
      artist = this.$('#artist-name').val();
      year = this.$('#record-year').val();
      condition = this.$('#record-condition').val();
      return this.record_collection.create({
        title: title,
        artist: artist,
        year: year,
        condition: condition
      });
    }
  });

}).call(this);
:ET