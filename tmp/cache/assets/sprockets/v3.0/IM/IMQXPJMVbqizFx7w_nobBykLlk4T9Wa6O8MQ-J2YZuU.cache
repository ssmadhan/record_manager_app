I"m	(function() {
  RecordManagerApp.Views.RecordManagerAppView = Backbone.View.extend({
    template: JST["backbone/templates/record_manager_app_main"],
    initialize: function() {
      _.bindAll(this, 'fetchRecords');
      this.record_collection = new RecordManagerApp.Collections.RecordCollection();
      this.limit = 20;
      this.offset = 0;
      return this.listenTo(this.record_collection, 'add', this.addOne);
    },
    events: {
      'click #add-new-record': 'addNewRecord',
      'click #create-new-record': 'createNewRecord'
    },
    render: function() {
      console.log("here");
      this.$el.html(this.template());
      this.fetchRecords();
      this.$('#record-display').bind('scroll', this.fetchRecords);
      return this;
    },
    fetchRecords: function(e) {
      var fieldId;
      if (e == null) {
        e = null;
      }
      fieldId = null;
      if (e !== null) {
        fieldId = e.target.getAttribute('id');
      }
      if (fieldId !== null) {
        if (this.offset === 0 || $('#' + fieldId).scrollTop() + $('#' + fieldId).innerHeight() >= $('#' + fieldId)[0].scrollHeight) {
          this.record_collection.fetch({
            data: {
              limit: this.limit,
              offset: this.offset
            }
          });
          this.offset = this.offset + 10;
          return console.log("in fetch");
        }
      } else {
        this.record_collection.fetch({
          data: {
            limit: this.limit,
            offset: this.offset
          }
        });
        this.offset = this.offset + 10;
        return console.log("in fetch");
      }
    },
    addNewRecord: function() {
      return this.$('#add-new-record-modal').modal('show');
    },
    addOne: function(record) {
      var view;
      view = new RecordManagerApp.Views.RecordItemView({
        model: record
      });
      return this.$("#records-table-body").append(view.render().el);
    },
    createNewRecord: function() {
      var artist, condition, title, year;
      title = this.$('#album-title').val();
      artist = this.$('#artist-name').val();
      year = this.$('#record-year').val();
      console.log("year is " + year);
      condition = this.$('#record-condition').val();
      return this.record_collection.create({
        title: title,
        artist: artist,
        year: year,
        condition: condition
      });
    }
  });

}).call(this);
:ET